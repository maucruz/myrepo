{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "mcr-data-factory"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"AzureSqlDW1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDW1'"
		},
		"sqlservicemcr_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sqlservicemcr'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDW1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDW1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlservicemcr')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('sqlservicemcr_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDWTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "ProductCategory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_q3l')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "SalesLT",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesLT_ProductCategory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlservicemcr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "ProductCategory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sqlservicemcr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_q3l')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlservicemcr",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "SalesLT",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sqlservicemcr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyFromSQLToSQLDW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_q3l",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_q3l",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "SalesLT.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "SalesLT.@{item().destination.table}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"preCopyScript": {
												"value": "@item().copySink.preCopyScript",
												"type": "Expression"
											},
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage2",
												"type": "LinkedServiceReference"
											}
										},
										"translator": {
											"value": "@item().copyActivity.translator",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_q3l",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_q3l",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().destination.table"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "ProductCategory"
								},
								"destination": {
									"table": "ProductCategory"
								},
								"copySink": {
									"preCopyScript": "BEGIN TRY\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'SalesLT') EXEC('Create Schema [SalesLT]');\nEND TRY\nBEGIN CATCH\nif ERROR_NUMBER() <> 2714 throw;\nEND CATCH\n\nIF OBJECT_ID('[SalesLT].[ProductCategory]', 'U') IS NULL CREATE TABLE [SalesLT].[ProductCategory] ([ProductCategoryID] int,\n[ParentProductCategoryID] int,\n[Name] nvarchar(50),\n[rowguid] uniqueidentifier,\n[ModifiedDate] datetime);\n"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"type": "Int32",
													"name": "ProductCategoryID"
												},
												"sink": {
													"type": "Int32",
													"name": "ProductCategoryID"
												}
											},
											{
												"source": {
													"type": "Int32",
													"name": "ParentProductCategoryID"
												},
												"sink": {
													"type": "Int32",
													"name": "ParentProductCategoryID"
												}
											},
											{
												"source": {
													"type": "String",
													"name": "Name"
												},
												"sink": {
													"type": "String",
													"name": "Name"
												}
											},
											{
												"source": {
													"type": "Guid",
													"name": "rowguid"
												},
												"sink": {
													"type": "Guid",
													"name": "rowguid"
												}
											},
											{
												"source": {
													"type": "DateTime",
													"name": "ModifiedDate"
												},
												"sink": {
													"type": "DateTime",
													"name": "ModifiedDate"
												}
											}
										]
									}
								}
							},
							{
								"source": {
									"table": "ProductDescription"
								},
								"destination": {
									"table": "ProductDescription"
								},
								"copySink": {
									"preCopyScript": "BEGIN TRY\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'SalesLT') EXEC('Create Schema [SalesLT]');\nEND TRY\nBEGIN CATCH\nif ERROR_NUMBER() <> 2714 throw;\nEND CATCH\n\nIF OBJECT_ID('[SalesLT].[ProductDescription]', 'U') IS NULL CREATE TABLE [SalesLT].[ProductDescription] ([ProductDescriptionID] int,\n[Description] nvarchar(400),\n[rowguid] uniqueidentifier,\n[ModifiedDate] datetime);\n"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"type": "Int32",
													"name": "ProductDescriptionID"
												},
												"sink": {
													"type": "Int32",
													"name": "ProductDescriptionID"
												}
											},
											{
												"source": {
													"type": "String",
													"name": "Description"
												},
												"sink": {
													"type": "String",
													"name": "Description"
												}
											},
											{
												"source": {
													"type": "Guid",
													"name": "rowguid"
												},
												"sink": {
													"type": "Guid",
													"name": "rowguid"
												}
											},
											{
												"source": {
													"type": "DateTime",
													"name": "ModifiedDate"
												},
												"sink": {
													"type": "DateTime",
													"name": "ModifiedDate"
												}
											}
										]
									}
								}
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_q3l')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_q3l')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFromSQLToSQLDW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductCategoryID",
											"type": "Int32"
										},
										"sink": {
											"name": "ProductCategoryID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ParentProductCategoryID",
											"type": "Int32"
										},
										"sink": {
											"name": "ParentProductCategoryID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SalesLT_ProductCategory",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlDWTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesLT_ProductCategory')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlDWTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		}
	]
}